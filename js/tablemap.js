// Generated by CoffeeScript 1.3.3
var geocodeLocation, locationList, locations, makeMap, placeMarker, placesMarked, tableMap, test;

test = 0;

locations = [];

locationList = [];

tableMap = function(gdoc) {
  locations = gdoc;
  return makeMap(locations);
};

geocodeLocation = function(location) {
  var addr, baseUrl, url;
  console.log("Location", location);
  baseUrl = "http://open.mapquestapi.com/nominatim/v1/search.php?format=json&json_callback=placeMarker";
  addr = "&q=" + location.location;
  url = encodeURI(baseUrl + addr + "&addressdetails=1&limit=1");
  console.log("URL>", url);
  return $.ajax({
    url: url,
    type: "GET",
    dataType: "script",
    cache: true
  });
};

placesMarked = 0;

placeMarker = function(result) {
  var marker, thisLocation;
  console.log("geoReturn", result[0]);
  location.lat = result[0].lat;
  location.lng = result[0].lon;
  marker = L.marker([location.lat, location.lng]).addTo(map);
  thisLocation = _.filter(locationList, function(row) {
    return row.i === placesMarked;
  });
  console.log("THIS LOCATION?", placesMarked, thisLocation[0]);
  marker.bindPopup(ich.locationItem(thisLocation[0], true), {
    maxHeight: 500
  });
  return placesMarked++;
};

makeMap = function(locations) {
  var layer;
  locationList = [];
  _.each(locations, function(location, i) {
    var locationHtml;
    location.i = i;
    locationList.push(location);
    geocodeLocation(location);
    locationHtml = ich.locationItemLi(location);
    return $("#location-list").append($(locationHtml));
  }, layer = new L.StamenTileLayer("toner"), window.map = new L.Map("map", {
    center: new L.LatLng(37.8, -122.4),
    zoom: 10
  }), map.addLayer(layer));
  return map.on('click', function(e) {
    return console.log(e.latlng);
  });
};
